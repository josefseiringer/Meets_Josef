@model Meets.Models.Event

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutCreateEvent.cshtml";
}

<div class="scrollAddEvent">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" }) 
            <div class="form-group">
                @Html.LabelFor(model => model.eventdate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.eventdate, new { htmlAttributes = new { @class = "form-control", id = "datetimepicker" } })
                    @Html.ValidationMessageFor(model => model.eventdate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                </div>
            </div>

            @*Wenn der Benutzer nicht Validiert ist das Event immer privat*@
            @if (ViewBag.nurPrivate != 0)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.viewpublic, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.viewpublic)
                            @Html.ValidationMessageFor(model => model.viewpublic, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            }

            <div class="form-group">
                @Html.LabelFor(model => model.location, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.location, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.location, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>
<script type="text/javascript">
    $(function () { // will trigger when the document is ready
        $('#datetimepicker').datepicker({
            format: 'dd/mm/yyyy'
        }); //Initialise any date pickers
    });

</script>





